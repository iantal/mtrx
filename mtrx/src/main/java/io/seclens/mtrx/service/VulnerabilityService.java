package io.seclens.mtrx.service;

import io.seclens.mtrx.data.domain.Vulnerability;
import io.seclens.mtrx.data.dto.VulnerabilityDto;
import io.seclens.mtrx.data.mapper.VulnerabilityMapper;
import io.seclens.mtrx.data.repository.VulnerabilityRepository;
import lombok.AllArgsConstructor;
import org.springframework.stereotype.Service;

import javax.transaction.Transactional;
import java.util.List;

import static java.util.stream.Collectors.toList;

@Service
@AllArgsConstructor
public class VulnerabilityService {

    private final VulnerabilityRepository vulnerabilityRepository;
    private final VulnerabilityMapper vulnerabilityMapper;

    @Transactional
    public VulnerabilityDto save(VulnerabilityDto vulnerabilityDto) {
        Vulnerability save = vulnerabilityRepository.save(vulnerabilityMapper.toVulnerability(vulnerabilityDto));
        vulnerabilityDto.setId(save.getId());
        return vulnerabilityDto;
    }

    @Transactional
    public List<VulnerabilityDto> getAllVulnerabilities() {
        return vulnerabilityRepository.findAll()
                .stream()
                .map(vulnerabilityMapper::fromVulnerability)
                .collect(toList());
    }

    @Transactional
    public List<VulnerabilityDto> getVulnerabilities(String projectId, String commit) {
        return vulnerabilityRepository.findByProjectIdAndCommit(projectId, commit)
                .stream()
                .map(vulnerabilityMapper::fromVulnerability)
                .collect(toList());
    }

}
